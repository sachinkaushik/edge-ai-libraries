From bab7d3e05cd96751f2c45a61e14c94d401e660b5 Mon Sep 17 00:00:00 2001
From: Zhang Wei <wei.e.zhang@intel.com>
Date: Tue, 4 Mar 2025 11:51:15 +0800
Subject: [PATCH 1/4] enable dpdk rebind script to check if iommu enable.

Signed-off-by: Zhang Wei <wei.e.zhang@intel.com>
---
 script/dpdk-driver-bind.sh | 95 ++++++++++++++++++++++++++++----------
 1 file changed, 71 insertions(+), 24 deletions(-)
 mode change 100644 => 100755 script/dpdk-driver-bind.sh

diff --git a/script/dpdk-driver-bind.sh b/script/dpdk-driver-bind.sh
old mode 100644
new mode 100755
index 0fa3528f..860c930d
--- a/script/dpdk-driver-bind.sh
+++ b/script/dpdk-driver-bind.sh
@@ -9,33 +9,59 @@ RESERVE_PAGES=1024            # RESERVE_HUGE_PAGES_KB/HUGE_PAGE_SIZE_KB
 
 # dpdk drivers: "igb_uio", "vfio-pci", "uio_pci_generic"
 DPDK_DRIVERS=vfio-pci
+DPDK_DRIVERS_NO_IOMMU=vfio
 # BDF of PCI device
 DEVICE_BDF=
 # kernel module of PCI device
 DEVICE_MODULES=
 
 #------------------------------------------------------------------------------
+# Check for IOMMU support in /sys
+check_sys_for_iommu() {
+	if [ -z "$(ls -A '/sys/class/iommu')" ]; then
+        return 1
+    else
+        return 0
+    fi
+}
 
 vfio_bind() {
     local bdf dev
     for bdf in "$@"; do
         echo "vfio bind: $bdf ..."
-        for dev in $(ls /sys/bus/pci/devices/$bdf/iommu_group/devices); do
-            if [ -e /sys/bus/pci/devices/$dev/driver ]; then
-                echo "    $dev : unbind driver ..."
-                echo $dev > /sys/bus/pci/devices/$dev/driver/unbind
+        if check_sys_for_iommu; then
+            for dev in $(ls /sys/bus/pci/devices/$bdf/iommu_group/devices); do
+                if [ -e /sys/bus/pci/devices/$dev/driver ]; then
+                    echo "    $dev : unbind driver ..."
+                    echo $dev > /sys/bus/pci/devices/$dev/driver/unbind
+                fi
+
+                if [ -e /sys/bus/pci/devices/$dev/driver_override ]; then
+                    echo "    $dev : set driver_override ..."
+                    echo $DPDK_DRIVERS > /sys/bus/pci/devices/$dev/driver_override
+                fi
+
+                if [ -e /sys/bus/pci/drivers/$DPDK_DRIVERS/bind ]; then
+                    echo "    $dev : bind to vfio ..."
+                    echo $dev > /sys/bus/pci/drivers/$DPDK_DRIVERS/bind
+                fi
+	    done
+	else
+            if [ -e /sys/bus/pci/devices/$bdf/driver ]; then
+                echo "    $bdf : unbind driver ..."
+                echo $bdf > /sys/bus/pci/devices/$bdf/driver/unbind
             fi
-
-            if [ -e /sys/bus/pci/devices/$dev/driver_override ]; then
-                echo "    $dev : set driver_override ..."
-                echo $DPDK_DRIVERS > /sys/bus/pci/devices/$dev/driver_override
+                
+	    if [ -e /sys/bus/pci/devices/$bdf/driver_override ]; then
+                echo "    $bdf : clear driver_override ..."
+                echo $DPDK_DRIVERS_NO_IOMMU > /sys/bus/pci/devices/$bdf/driver_override
             fi
 
-            if [ -e /sys/bus/pci/drivers/$DPDK_DRIVERS/bind ]; then
-                echo "    $dev : bind to vfio ..."
-                echo $dev > /sys/bus/pci/drivers/$DPDK_DRIVERS/bind
+            if [ -e /sys/bus/pci/drivers/$DPDK_DRIVERS_NO_IOMMU/bind ]; then
+                echo "    $bdf : bind to vfio ..."
+                echo $bdf > /sys/bus/pci/drivers/$DPDK_DRIVERS_NO_IOMMU/bind
             fi
-        done
+	fi
     done
 }
 
@@ -45,22 +71,39 @@ vfio_unbind() {
     local bdf dev
     for bdf in "$@"; do
         echo "$DEVICE_MODULES bind: $bdf ..."
-        for dev in $(ls /sys/bus/pci/devices/$bdf/iommu_group/devices); do
-            if [ -e /sys/bus/pci/devices/$dev/driver ]; then
-                echo "    $dev : unbind driver ..."
-                echo $dev > /sys/bus/pci/devices/$dev/driver/unbind
+        if check_sys_for_iommu; then
+            for dev in $(ls /sys/bus/pci/devices/$bdf/iommu_group/devices); do
+                if [ -e /sys/bus/pci/devices/$dev/driver ]; then
+                    echo "    $dev : unbind driver ..."
+                    echo $dev > /sys/bus/pci/devices/$dev/driver/unbind
+                fi
+
+                if [ -e /sys/bus/pci/devices/$dev/driver_override ]; then
+                    echo "    $dev : clear driver_override ..."
+                    echo "" > /sys/bus/pci/devices/$dev/driver_override
+                fi
+
+                if [ -e /sys/bus/pci/drivers/$DEVICE_MODULES/bind ]; then
+                    echo "    $dev : bind to $DEVICE_MODULES ..."
+                    echo $dev > /sys/bus/pci/drivers/$DEVICE_MODULES/bind
+                fi
+            done
+        else
+	    if [ -e /sys/bus/pci/devices/$bdf/driver ]; then
+                echo "    $bdf : unbind driver ..."
+                echo $bdf > /sys/bus/pci/devices/$bdf/driver/unbind
             fi
 
-            if [ -e /sys/bus/pci/devices/$dev/driver_override ]; then
-                echo "    $dev : clear driver_override ..."
-                echo "" > /sys/bus/pci/devices/$dev/driver_override
+            if [ -e /sys/bus/pci/devices/$bdf/driver_override ]; then
+                echo "    $bdf : clear driver_override ..."
+                echo "" > /sys/bus/pci/devices/$bdf/driver_override
             fi
 
             if [ -e /sys/bus/pci/drivers/$DEVICE_MODULES/bind ]; then
-                echo "    $dev : bind to $DEVICE_MODULES ..."
-                echo $dev > /sys/bus/pci/drivers/$DEVICE_MODULES/bind
+                echo "    $bdf : bind to $DEVICE_MODULES ..."
+                echo $bdf > /sys/bus/pci/drivers/$DEVICE_MODULES/bind
             fi
-        done
+	fi
     done
 }
 
@@ -85,7 +128,11 @@ start)
     fi
 
     echo "    modprobe dpdk driver"
-    modprobe $DPDK_DRIVERS
+    if check_sys_for_iommu; then
+        modprobe $DPDK_DRIVERS
+    else
+        modprobe $DPDK_DRIVERS_NO_IOMMU enable_unsafe_noiommu_mode=1
+    fi
 
     vfio_bind $DEVICE_BDF
 
@@ -100,7 +147,7 @@ stop)
         exit 0
     fi
     DEVICE_BDF=$2
-		DEVICE_MODULES=$(lspci -k -s $DEVICE_BDF | grep "Kernel modules" | awk '{print $3}' | awk '{sub(/,$/,"")}1')
+    DEVICE_MODULES=$(lspci -k -s $DEVICE_BDF | grep "Kernel modules" | awk '{print $3}' | awk '{sub(/,$/,"")}1')
 
     vfio_unbind $DEVICE_BDF
   
-- 
2.34.1

